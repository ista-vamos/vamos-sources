start
  events_and_imports
    imports
      importmod
        name	common
        


    eventsspec
      None
      eventdecl
        events__eventdecl
          events__name	Num
          events__fieldsdecl
            events__datafield
              events__name	x
              events__typeannot
                events__types__type
                  events__types__simpletype	Int32
  statements
    statement
      let
        name	t
        expr
          newexpr
            type
              types__tracetype
                types__usertype	Num
    statement
      foreach
        name	n
        iterable
          methodcall
            name	common
            name	range
            params
              expr
                constant_number	1
              expr
                constant_number	101
        statements
          statement
            yieldto
              eventseq
                event
                  name	Num
                  params
                    name	n
              tracename	t

   Program(...)
     Let(ID(t), New(Tr:uTYPE(ID(Num))))
     ForEach(ID(n) in MethodCall(ID(common), ID(range), [Constant(1 : Num), Constant(101 : Num)]) do StatementList([Yield([Event(ID(Num), [ID(n)])], ID(t)) ...))
       Yield([Event(ID(Num), [ID(n)])], ID(t))
         Event(ID(Num), [ID(n)])
           ID(n)
         ID(t)
module name: __main__
Parent process: 938
Interpreter PID: 8829
Imported: <module 'modules.common' from '/home/marek/src/vamos/vamos/vamos-sources/spec/modules/common.py'>
[Interpreter] running on program
[1]: 1: [0;34mNum[0m, 1
[1]: 2: [0;34mNum[0m, 2
[1]: 3: [0;34mNum[0m, 3
[1]: 4: [0;34mNum[0m, 4
[1]: 5: [0;34mNum[0m, 5
[1]: 6: [0;34mNum[0m, 6
[1]: 7: [0;34mNum[0m, 7
[1]: 8: [0;34mNum[0m, 8
[1]: 9: [0;34mNum[0m, 9
[1]: 10: [0;34mNum[0m, 10
[1]: 11: [0;34mNum[0m, 11
[1]: 12: [0;34mNum[0m, 12
[1]: 13: [0;34mNum[0m, 13
[1]: 14: [0;34mNum[0m, 14
[1]: 15: [0;34mNum[0m, 15
[1]: 16: [0;34mNum[0m, 16
[1]: 17: [0;34mNum[0m, 17
[1]: 18: [0;34mNum[0m, 18
[1]: 19: [0;34mNum[0m, 19
[1]: 20: [0;34mNum[0m, 20
[1]: 21: [0;34mNum[0m, 21
[1]: 22: [0;34mNum[0m, 22
[1]: 23: [0;34mNum[0m, 23
[1]: 24: [0;34mNum[0m, 24
[1]: 25: [0;34mNum[0m, 25
[1]: 26: [0;34mNum[0m, 26
[1]: 27: [0;34mNum[0m, 27
[1]: 28: [0;34mNum[0m, 28
[1]: 29: [0;34mNum[0m, 29
[1]: 30: [0;34mNum[0m, 30
[1]: 31: [0;34mNum[0m, 31
[1]: 32: [0;34mNum[0m, 32
[1]: 33: [0;34mNum[0m, 33
[1]: 34: [0;34mNum[0m, 34
[1]: 35: [0;34mNum[0m, 35
[1]: 36: [0;34mNum[0m, 36
[1]: 37: [0;34mNum[0m, 37
[1]: 38: [0;34mNum[0m, 38
[1]: 39: [0;34mNum[0m, 39
[1]: 40: [0;34mNum[0m, 40
[1]: 41: [0;34mNum[0m, 41
[1]: 42: [0;34mNum[0m, 42
[1]: 43: [0;34mNum[0m, 43
[1]: 44: [0;34mNum[0m, 44
[1]: 45: [0;34mNum[0m, 45
[1]: 46: [0;34mNum[0m, 46
[1]: 47: [0;34mNum[0m, 47
[1]: 48: [0;34mNum[0m, 48
[1]: 49: [0;34mNum[0m, 49
[1]: 50: [0;34mNum[0m, 50
[1]: 51: [0;34mNum[0m, 51
[1]: 52: [0;34mNum[0m, 52
[1]: 53: [0;34mNum[0m, 53
[1]: 54: [0;34mNum[0m, 54
[1]: 55: [0;34mNum[0m, 55
[1]: 56: [0;34mNum[0m, 56
[1]: 57: [0;34mNum[0m, 57
[1]: 58: [0;34mNum[0m, 58
[1]: 59: [0;34mNum[0m, 59
[1]: 60: [0;34mNum[0m, 60
[1]: 61: [0;34mNum[0m, 61
[1]: 62: [0;34mNum[0m, 62
[1]: 63: [0;34mNum[0m, 63
[1]: 64: [0;34mNum[0m, 64
[1]: 65: [0;34mNum[0m, 65
[1]: 66: [0;34mNum[0m, 66
[1]: 67: [0;34mNum[0m, 67
[1]: 68: [0;34mNum[0m, 68
[1]: 69: [0;34mNum[0m, 69
[1]: 70: [0;34mNum[0m, 70
[1]: 71: [0;34mNum[0m, 71
[1]: 72: [0;34mNum[0m, 72
[1]: 73: [0;34mNum[0m, 73
[1]: 74: [0;34mNum[0m, 74
[1]: 75: [0;34mNum[0m, 75
[1]: 76: [0;34mNum[0m, 76
[1]: 77: [0;34mNum[0m, 77
[1]: 78: [0;34mNum[0m, 78
[1]: 79: [0;34mNum[0m, 79
[1]: 80: [0;34mNum[0m, 80
[1]: 81: [0;34mNum[0m, 81
[1]: 82: [0;34mNum[0m, 82
[1]: 83: [0;34mNum[0m, 83
[1]: 84: [0;34mNum[0m, 84
[1]: 85: [0;34mNum[0m, 85
[1]: 86: [0;34mNum[0m, 86
[1]: 87: [0;34mNum[0m, 87
[1]: 88: [0;34mNum[0m, 88
[1]: 89: [0;34mNum[0m, 89
[1]: 90: [0;34mNum[0m, 90
[1]: 91: [0;34mNum[0m, 91
[1]: 92: [0;34mNum[0m, 92
[1]: 93: [0;34mNum[0m, 93
[1]: 94: [0;34mNum[0m, 94
[1]: 95: [0;34mNum[0m, 95
[1]: 96: [0;34mNum[0m, 96
[1]: 97: [0;34mNum[0m, 97
[1]: 98: [0;34mNum[0m, 98
[1]: 99: [0;34mNum[0m, 99
[1]: 100: [0;34mNum[0m, 100
